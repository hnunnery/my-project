// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  name          String?
  password      String?   // For credentials provider
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Player {
  id        String   @id            // canonical Sleeper player_id
  name      String
  pos       String
  team      String?
  ageYears  Float?   // decimal age (e.g., 24.6)
  aliases   Json?    // { sleeper: "...", fantasypros: "...", ktc: "..." }

  snapshots Snapshot[]
  values    ValueDaily[]
  @@index([pos])
}

model Snapshot {
  asOfDate DateTime
  source   String
  playerId String
  rawValue Float
  meta     Json?

  player   Player @relation(fields: [playerId], references: [id])

  @@id([asOfDate, source, playerId])
  @@index([source, asOfDate])
  @@index([playerId])
}

model ValueDaily {
  asOfDate        DateTime
  playerId        String
  marketValue     Float?  // 0â€“100 after normalization
  ageScore        Float?
  dynastyValue    Float?
  trend7d         Float?
  trend30d        Float?

  player          Player @relation(fields: [playerId], references: [id])

  @@id([asOfDate, playerId])
  @@index([asOfDate])
  @@index([dynastyValue, playerId])
}
